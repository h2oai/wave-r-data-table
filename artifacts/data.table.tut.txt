groups, description
Subsetting rows using i, "DT[3:5,] #Select 3rd to 5th row"
Subsetting rows using i, "DT[3:5] #Select 3rd to 5th row"
Subsetting rows using i, "DT[V2=='A'] #Select all rows that have A in V2"
Subsetting rows using i, "DT[V2 %in% c('A','C')] #Select all rows that have A or C in V2"
Manipulating on Columns in j, "DT[,V2] #Return V2 as a vector"
Manipulating on Columns in j, "DT[,.(V2,V3)] #Return V2 and V3 as a data.table"
Manipulating on Columns in j, "DT[,sum(V1)] #Return the sum of all elements of V1 in a vector"
Manipulating on Columns in j, "DT[,.(sum(V1),sd(V3))] #Return the sum of all elements of V1 and the std. dev. of V3 in a data.table"
Manipulating on Columns in j, "DT[,.(Aggregate=sum(V1), Sd.V3=sd(V3))] #The same as the above, with new names"
Manipulating on Columns in j, "DT[,.(V1,Sd.V3=sd(V3))] #Select column V2 and compute std. dev. of V3, which returns a single value & gets recycled"
Manipulating on Columns in j, "DT[,.(V2,render_plot(.SD,~V2,~V3))] #Print column V2 and plot V2, V3"
Chaining, "DT[,.(V4.Sum=sum(V4)),by=V1][V4.Sum>40] #Select that group of which the sum is >40"
Chaining, "DT[,.(V4.Sum=sum(V4)), by=V1][order(-V1)] #Calculate sum of V4, grouped by ordered on V1"
Doing j by Group, "DT[,.(V4.Sum=sum(V4)),by=V1] #Calculate sum of V4 for every group in V1 Sum" 
Doing j by Group, "DT[,.(V4.Sum=sum(V4)), by=.(V1,V2)] #Calculate sum of V4 for every group in V1and V2"
Doing j by Group, "DT[,.(V4.Sum=sum(V4)), by=sign(V1)] #Calculate sum of V4 for every group in sign"
Doing j by Group, "DT[,.(V4.Sum=sum(V4)), by=.(V1.sign=sign(V1))] #The same as the above, with new namefor the variable you are grouping by"
Doing j by Group, "DT[1:5,.(V4.Sum=sum(V4)), by=V1] #Calculate sum of V4 for every group in V1after subsetting on the first 5 rows"
Doing j by Group, "DT[,.N,by=V1] #Count number of rows for every group in V1"
Adding/Updating Columns By Reference in j Using :=, "DT[,V1:= round(exp(V1),2)] #V1 is updated by what is after :="
Adding/Updating Columns By Reference in j Using :=, "DT[,c('V1' ,'V2' ):= list(round(exp(V1),2),"A")] #Columns V1 & V2 are updated bywhat is after :="
Adding/Updating Columns By Reference in j Using :=, "DT[,V1:= NULL] #Remove V1"
Adding/Updating Columns By Reference in j Using :=, "DT[,c('V1','V2'):= NULL] #Remove columns V1 and V2"
Advanced Operations, "DT[.N-1] #Return the penultimate row of the DT"
Advanced Operations, "DT[,.N] #Return the number of rows"
Advanced Operations, "DT[,list(V2,V3)] #Return V2 and V3 as a data.table"
Advanced Operations, "DT[,mean(V3),by=.(V1,V2)] #Return the result of j, grouped by all possible combinations of groups specified in by"
Advanced Operations, "DT[,.SD[c(1,.N)],by=V2] #Select the first and the last row grouped by V2"
Advanced Operations, "DT[,lapply(.SD,sum),by=V2] #Calculate sum of columns in .SD grouped by V2"
Advanced Operations, "DT[,lapply(.SD,sum),by=V2,.SDcols=c('V3','V4')] #Calculate sum of columns in .SD grouped by V2"

